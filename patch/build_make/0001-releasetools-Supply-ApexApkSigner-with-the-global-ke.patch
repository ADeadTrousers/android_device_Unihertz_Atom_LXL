From 2cbdecdf5fff05df42fb69fb535318db5bef8851 Mon Sep 17 00:00:00 2001
From: Matthias Leitl <a.dead.trousers@gmail.com>
Date: Wed, 11 May 2022 22:11:44 +0200
Subject: [PATCH 1/1] releasetools: Supply ApexApkSigner with the global
 key_passwords.

Otherwise it will fail on password protected signing key.
Since the class uses its own mapping in apk_keys it *really* needs access to the global key_passwords dict.
There is already a key_passwords variable inside the scope of the class but it isn't set correctly by the caller.

Change-Id: If1bd625f079e7b62dae2a146c3ffda5fe5f20f1a
---
 tools/releasetools/apex_utils.py             | 6 +++---
 tools/releasetools/sign_target_files_apks.py | 1 +
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/tools/releasetools/apex_utils.py b/tools/releasetools/apex_utils.py
index 1c61938048..5752aa4335 100644
--- a/tools/releasetools/apex_utils.py
+++ b/tools/releasetools/apex_utils.py
@@ -110,7 +110,7 @@ class ApexApkSigner(object):
       # signed apk file.
       unsigned_apk = common.MakeTempFile()
       os.rename(apk_path, unsigned_apk)
-      common.SignFile(unsigned_apk, apk_path, key_name, self.key_passwords,
+      common.SignFile(unsigned_apk, apk_path, key_name, self.key_passwords[key_name],
                       codename_to_api_level_map=self.codename_to_api_level_map)
       has_signed_apk = True
     return payload_dir, has_signed_apk
@@ -283,7 +283,7 @@ def ParseApexPayloadInfo(avbtool, payload_path):
 
 
 def SignApex(avbtool, apex_data, payload_key, container_key, container_pw,
-             apk_keys, codename_to_api_level_map,
+             key_passwords, apk_keys, codename_to_api_level_map,
              no_hashtree, signing_args=None):
   """Signs the current APEX with the given payload/container keys.
 
@@ -308,7 +308,7 @@ def SignApex(avbtool, apex_data, payload_key, container_key, container_pw,
 
   # 1. Extract the apex payload image and sign the containing apk files. Repack
   # the apex file after signing.
-  apk_signer = ApexApkSigner(apex_file, container_pw,
+  apk_signer = ApexApkSigner(apex_file, key_passwords,
                              codename_to_api_level_map)
   apex_file = apk_signer.ProcessApexFile(apk_keys, payload_key, signing_args)
 
diff --git a/tools/releasetools/sign_target_files_apks.py b/tools/releasetools/sign_target_files_apks.py
index 4eb73dc9d1..f992cb2586 100755
--- a/tools/releasetools/sign_target_files_apks.py
+++ b/tools/releasetools/sign_target_files_apks.py
@@ -516,6 +516,7 @@ def ProcessTargetFiles(input_tf_zip, output_tf_zip, misc_info,
             payload_key,
             container_key,
             key_passwords[container_key],
+            key_passwords,
             apk_keys,
             codename_to_api_level_map,
             no_hashtree=True,
-- 
2.25.1

