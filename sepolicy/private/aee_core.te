type aee_core_forwarder_exec, file_type, exec_type, system_file_type;

init_daemon_domain(aee_core_forwarder);
domain_auto_trans(kernel,aee_core_forwarder_exec,aee_core_forwarder);

allow aee_core_forwarder sdcard_type:dir {ioctl read write create getattr setattr lock rename add_name remove_name reparent search rmdir open};
allow aee_core_forwarder sdcard_type:file {ioctl read write create getattr setattr lock append map unlink rename open};
allow aee_core_forwarder self:capability {fsetid setgid};
allow aee_core_forwarder kernel:fifo_file {read};
allow aee_core_forwarder domain:dir {ioctl read getattr lock search open};
allow aee_core_forwarder domain:file {ioctl read getattr lock map open};
allow aee_core_forwarder sysfs_wake_lock:file {ioctl read write getattr lock append map open};
allow aee_core_forwarder self:capability2 {block_suspend};
allow aee_core_forwarder mnt_user_file:dir {search};
allow aee_core_forwarder mnt_user_file:lnk_file {read};
allow aee_core_forwarder storage_file:dir {search};
allow aee_core_forwarder storage_file:lnk_file {read};
dontaudit aee_core_forwarder untrusted_app:dir {search};
allow aee_core_forwarder kernel:fd {use};
allow aee_core_forwarder tmpfs:dir {search};
allow aee_core_forwarder rootfs:file {ioctl read getattr lock map open};
dontaudit aee_core_forwarder self:capability {sys_ptrace};
allow aee_core_forwarder media_rw_data_file:dir {write lock add_name remove_name search open};
allow aee_core_forwarder media_rw_data_file:file {write create open};
allow aee_core_forwarder self:capability {sys_nice};
allow aee_core_forwarder hwservicemanager_prop:file {read getattr map open};
allow aee_core_forwarder aee_aed:unix_stream_socket {connectto};
allow aee_core_forwarder kernel:process {sigchld};
